# This GitHub Actions workflow automates the update of Nix lock file in the repository.
# It utilizes an SSH agent with deploy keys to access and update from private repositories.
# The workflow step "Create compare URLs" requires two scripts to exist within the specified folders to function correctly.
#
# **Usage:**
# - Ensure that the necessary deploy keys are configured for SSH access to private repositories.
# - Place the required scripts for generating compare URLs in the appropriate folders.
# - The workflow runs on a scheduled basis and commits any updates to the Nix lock files.
name: Update flake
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */4 * * *" # Every 4 hours
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled, edited, closed]
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  lockfile:
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@master
        with:
          ssh-private-key: ${{ secrets.GH_ACTIONS }} # The private key for the SSH agent
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Update flake.lock
        uses: DeterminateSystems/update-flake-lock@main
        id: update-flake-lock
        with:
          commit-msg: "ðŸ§¹ chore(flake.lock): update"
          pr-body: |
            ```
            {{ env.GIT_COMMIT_MESSAGE }}
            ```
          pr-title: "chore(flake.lock): update"
          pr-labels: |
            automated
            automerge
            dependencies
          nix-options: "--access-tokens github.com=${{ secrets.TESTING }}"
          token: ${{ secrets.TESTING }} # The GitHub token for the update-flake-lock action
      - name: Create compare URLs
        uses: actions/github-script@main
        if: steps.update-flake-lock.outputs.pull-request-operation == 'created' || steps.update-flake-lock.outputs.pull-request-operation == 'updated'
        with:
          # github-token: ${{ secrets.TESTING }}
          github-token: ${{ secrets.TESTING }}
          script: |
            const comment = require('.github/scripts/comment')
            const compare = require('.github/scripts/compare')

            const urls = await compare({ core })
            if (!urls?.length) {
              return
            }

            const header = "# Compare URLs"
            const body = urls.map((url) => `- ${url}`).join("\n")

            const issueNumber = parseInt(process.env.PULL_REQUEST_NUMBER, 10)
            if (Number.isNaN(issueNumber)) {
              return
            }

            await comment({ github, context, header, body, issueNumber })

  dependabot:
    runs-on: ubuntu-latest
    if: (github.event.pull_request.user.login == 'dependabot[bot]' || github.event.pull_request.user.login == 'github-actions[bot]' || github.event.pull_request.user.login == 'telometto' || github.actor == 'telometto') && github.repository == 'telometto/nix-config'
    steps:
      # - name: Dependabot metadata
      #   id: metadata
      #   uses: dependabot/fetch-metadata@main
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable auto-merge for Dependabot PRs
        # if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}