name: Infrastructure Health Check
on:
  schedule:
    - cron: "0 6 * * *" # Daily at 6 AM
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  health-check:
    runs-on: ubuntu-latest
    steps:
      - name: Access private repository
        uses: webfactory/ssh-agent@master
        with:
          ssh-private-key: ${{ secrets.GH_ACTIONS }}

      - name: Checkout main repository
        uses: actions/checkout@main # The action to checkout the repository
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Reclaim disk space on runner
        run: |
          echo "## 📦 Disk Usage (before cleanup)" >> $GITHUB_STEP_SUMMARY
          df -h >> $GITHUB_STEP_SUMMARY

          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache || true
          sudo docker system prune -af || true
          sudo rm -rf /home/linuxbrew || true

          echo "## ♻️ Disk Usage (after cleanup)" >> $GITHUB_STEP_SUMMARY
          df -h >> $GITHUB_STEP_SUMMARY

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Build configurations
        run: |
          echo "## 🏗️ Build Results" >> $GITHUB_STEP_SUMMARY

          for host in snowfall blizzard avalanche; do
            echo "Building $host..."
            if nix build ".#nixosConfigurations.$host.config.system.build.toplevel" --no-link; then
              echo "✅ $host: Build successful" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ $host: Build failed" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          done

      - name: Collect Nix garbage
        if: always()
        run: |
          nix store gc || nix-collect-garbage || true

      - name: Check for security updates
        run: |
          echo "## 🔒 Security Status" >> $GITHUB_STEP_SUMMARY
          # Check for CVEs in nixpkgs
          if nix run nixpkgs#vulnix -- --system; then
            echo "✅ No known vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Potential security issues detected" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create issue if failures
        if: failure()
        uses: actions/github-script@main
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Infrastructure Health Check Failed',
              body: 'Automated health check detected issues. Please review the workflow run for details.',
              labels: ['infrastructure', 'urgent']
            })
