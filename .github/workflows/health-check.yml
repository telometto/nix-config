name: Infrastructure Health Check
on:
  schedule:
    - cron: "0 6 * * *" # Daily at 6 AM
  workflow_dispatch:

permissions:
  contents: read
  issues: write
jobs:
  build-hosts:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        host: [snowfall, blizzard, avalanche]
    steps:
      - name: Access private repository
        uses: webfactory/ssh-agent@master
        with:
          ssh-private-key: ${{ secrets.GH_ACTIONS }}

      - name: Checkout main repository
        uses: actions/checkout@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: DeterminateSystems/magic-nix-cache-action@v3

      - name: Reclaim disk space on runner
        run: |
          HOST="${{ matrix.host }}"
          echo "## 📦 Disk Usage (${HOST}) - before cleanup" >> $GITHUB_STEP_SUMMARY
          df -h >> $GITHUB_STEP_SUMMARY

          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache || true
          sudo docker system prune -af || true
          sudo rm -rf /home/linuxbrew || true

          echo "## ♻️ Disk Usage (${HOST}) - after cleanup" >> $GITHUB_STEP_SUMMARY
          df -h >> $GITHUB_STEP_SUMMARY

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4

      - name: Expand build sandbox for avalanche
        if: matrix.host == 'avalanche'
        run: |
          mkdir -p ~/.config/nix
          cat <<'EOF' >> ~/.config/nix/nix.conf
          sandbox = false
          EOF

      - name: Build ${{ matrix.host }}
        run: |
          HOST="${{ matrix.host }}"
          echo "## 🏗️ Build Results - ${HOST}" >> $GITHUB_STEP_SUMMARY
          if nix build ".#nixosConfigurations.${HOST}.config.system.build.toplevel" --no-link --print-build-logs; then
            echo "✅ ${HOST}: Build successful" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ ${HOST}: Build failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Collect Nix garbage
        if: always()
        run: |
          nix store gc || nix-collect-garbage || true
          df -h

  health-summary:
    runs-on: ubuntu-latest
    needs: build-hosts
    if: always()
    steps:
      - name: Access private repository
        uses: webfactory/ssh-agent@master
        with:
          ssh-private-key: ${{ secrets.GH_ACTIONS }}

      - name: Checkout main repository
        uses: actions/checkout@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: DeterminateSystems/magic-nix-cache-action@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4

      - name: Check for security updates
        if: needs.build-hosts.result == 'success'
        run: |
          echo "## 🔒 Security Status" >> $GITHUB_STEP_SUMMARY
          if nix run nixpkgs#vulnix -- --system; then
            echo "✅ No known vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Potential security issues detected" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create issue if failures
        if: failure()
        uses: actions/github-script@main
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Infrastructure Health Check Failed',
              body: 'Automated health check detected issues. Please review the workflow run for details.',
              labels: ['infrastructure', 'urgent']
            })
